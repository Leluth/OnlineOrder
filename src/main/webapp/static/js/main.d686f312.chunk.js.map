{"version":3,"sources":["utils.js","components/LoginForm.js","components/SignupForm.js","components/FoodList.js","components/MyCart.js","asset/background.jpg","App.js","reportWebVitals.js","index.js"],"names":["login","credential","username","password","loginUrl","fetch","method","headers","credentials","then","response","status","Error","signup","data","body","JSON","stringify","LoginForm","state","loading","formRef","React","createRef","onFinish","setState","message","success","props","onSuccess","catch","err","error","finally","onReset","current","resetFields","this","name","ref","style","width","margin","textAlign","color","fontSize","marginTop","ShoppingCartOutlined","Item","rules","required","size","prefix","UserOutlined","placeholder","Password","LockOutlined","type","htmlType","shape","onClick","Component","SignupForm","displayModal","handleCancel","signupOnClick","render","icon","LoginOutlined","title","visible","onCancel","footer","destroyOnClose","preserve","Option","Select","AddToCartButton","itemId","useState","setLoading","PlusOutlined","addItemToCart","FoodList","foodData","setFoodData","curRest","setCurRest","restaurants","setRestaurants","loadingRest","setLoadingRest","useEffect","json","restId","value","onSelect","onChange","map","item","id","grid","gutter","xs","sm","md","lg","xl","xxl","dataSource","renderItem","extra","src","imageUrl","alt","height","display","price","Text","Typography","MyCart","cartVisible","setCartVisible","isModalVisible","setIsModalVisible","cartData","setCartData","checking","setChecking","onCloseDrawer","LogoutOutlined","okText","onOk","onLogout","onClose","justifyContent","strong","totalPrice","marginRight","disabled","orderItemList","length","itemLayout","actions","DeleteOutlined","Meta","avatar","menuItem","description","Header","Layout","Content","Footer","Title","App","authed","setAuthed","backgroundImage","Background","className","level","lineHeight","marginBottom","padding","maxHeight","overflowY","background","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d686f312.chunk.js","sourcesContent":["// login api\r\nexport const login = credential => {\r\n    // credential: {username: value, password: value}\r\n    // request option: method, url, data\r\n    const {username, password} = credential;\r\n    const loginUrl = `/login?username=${username}&password=${password}`;\r\n    return fetch(loginUrl, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n    }).then((response) => {\r\n        // case1: login successfully\r\n        // case2: login failed\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to log in\");\r\n        }\r\n    });\r\n}\r\n\r\n// signup api\r\nexport const signup = (data) => {\r\n    const signupUrl = \"/signup\";\r\n\r\n    return fetch(signupUrl, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n    }).then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to sign up\");\r\n        }\r\n    });\r\n};\r\n\r\n// fetch restaurants data\r\nexport const getRestaurants = () => {\r\n    return fetch(\"/restaurants\").then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to get restaurants\");\r\n        }\r\n        return response.json();\r\n    });\r\n};\r\n\r\n// add item to cart api\r\nexport const addItemToCart = (itemId) => {\r\n    return fetch(`/order/${itemId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n    }).then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to add menu item to shopping cart\");\r\n        }\r\n    });\r\n};\r\n\r\n// fetch menus data\r\nexport const getMenus = (restId) => {\r\n    return fetch(`/restaurant/${restId}/menu`).then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to get menus\");\r\n        }\r\n        return response.json();\r\n    });\r\n};\r\n\r\n// fetch cart data\r\nexport const getCart = () => {\r\n    return fetch(\"/cart\").then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to get shopping cart data\");\r\n        }\r\n\r\n        return response.json();\r\n    });\r\n};\r\n\r\n// checkout api\r\nexport const checkout = () => {\r\n    return fetch(\"/checkout\").then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to checkout\");\r\n        }\r\n    });\r\n};","import React, {Component} from 'react';\r\nimport {Button, Form, Input, message, Space} from \"antd\";\r\nimport {LockOutlined, ShoppingCartOutlined, UserOutlined} from \"@ant-design/icons\";\r\nimport {login} from \"../utils\";\r\n\r\nclass LoginForm extends Component {\r\n    state = {\r\n        loading: false,\r\n    };\r\n\r\n    formRef = React.createRef();\r\n\r\n    onFinish = (data) => {\r\n        this.setState({\r\n            loading: true,\r\n        });\r\n        login(data)\r\n            .then(() => {\r\n                message.success(`Login Successfully`);\r\n                this.props.onSuccess();\r\n            })\r\n            .catch((err) => {\r\n                message.error(err.message);\r\n            })\r\n            .finally(() => {\r\n                this.setState({\r\n                    loading: false,\r\n                });\r\n            });\r\n    };\r\n\r\n    onReset = () => {\r\n        this.formRef.current.resetFields();\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        this.setState = () => false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Form\r\n                name=\"normal_login\"\r\n                ref={this.formRef}\r\n                onFinish={this.onFinish}\r\n                style={{\r\n                    width: 400,\r\n                    margin: \"auto\",\r\n                }}\r\n            >\r\n                <div style={{textAlign: 'center', color: 'white', fontSize: '80px', marginTop: \"20%\"}}>\r\n                    <ShoppingCartOutlined/>\r\n                </div>\r\n                <Form.Item\r\n                    name=\"username\"\r\n                    rules={[{required: true, message: \"Please input your Username!\"}]}\r\n                >\r\n                    <Input size=\"large\" prefix={<UserOutlined/>} placeholder=\"Username\"/>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"password\"\r\n                    rules={[{required: true, message: \"Please input your Password!\"}]}\r\n                >\r\n                    <Input.Password size=\"large\" prefix={<LockOutlined/>} placeholder=\"Password\"/>\r\n                </Form.Item>\r\n\r\n                <Form.Item style={{textAlign: 'center'}}>\r\n                    <Space size=\"large\">\r\n                        <Button size=\"large\" type=\"primary\" htmlType=\"submit\" shape=\"round\"\r\n                                loading={this.state.loading}>\r\n                            Login\r\n                        </Button>\r\n                        <Button size=\"large\" htmlType=\"button\" shape=\"round\" onClick={this.onReset}>\r\n                            Reset\r\n                        </Button>\r\n                    </Space>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginForm;","import {Button, Form, Input, message, Modal} from \"antd\";\r\nimport React from \"react\";\r\nimport {LockOutlined, LoginOutlined, UserOutlined} from \"@ant-design/icons\";\r\nimport {signup} from \"../utils\";\r\n\r\nclass SignupForm extends React.Component {\r\n    state = {\r\n        displayModal: false,\r\n    };\r\n\r\n    handleCancel = () => {\r\n        this.setState({\r\n            displayModal: false,\r\n        });\r\n    };\r\n\r\n    signupOnClick = () => {\r\n        this.setState({\r\n            displayModal: true,\r\n        });\r\n    };\r\n\r\n    onFinish = (data) => {\r\n        signup(data)\r\n            .then(() => {\r\n                this.setState({\r\n                    displayModal: false,\r\n                });\r\n                message.success(`Successfully signed up`);\r\n            })\r\n            .catch((err) => {\r\n                message.error(err.message);\r\n            });\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <>\r\n                <Button shape=\"round\" type=\"primary\" icon={<LoginOutlined/>} onClick={this.signupOnClick}>\r\n                    Register\r\n                </Button>\r\n                <Modal\r\n                    title=\"Register\"\r\n                    visible={this.state.displayModal}\r\n                    onCancel={this.handleCancel}\r\n                    footer={null}\r\n                    destroyOnClose={true}\r\n                >\r\n                    <Form\r\n                        name=\"normal_register\"\r\n                        onFinish={this.onFinish}\r\n                        preserve={false}\r\n                    >\r\n                        <Form.Item\r\n                            name=\"email\"\r\n                            rules={[{required: true, message: \"Please input your email!\"}]}\r\n                        >\r\n                            <Input prefix={<UserOutlined/>} placeholder=\"Email\"/>\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            rules={[\r\n                                {required: true, message: \"Please input your password!\"},\r\n                            ]}\r\n                        >\r\n                            <Input.Password prefix={<LockOutlined/>} placeholder=\"Password\"/>\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"firstName\"\r\n                            rules={[\r\n                                {required: true, message: \"Please input your first name!\"},\r\n                            ]}\r\n                        >\r\n                            <Input placeholder=\"firstname\"/>\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"lastName\"\r\n                            rules={[\r\n                                {required: true, message: \"Please input your last name!\"},\r\n                            ]}\r\n                        >\r\n                            <Input placeholder=\"lastname\"/>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                Register\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n            </>\r\n        );\r\n    };\r\n}\r\n\r\nexport default SignupForm;","import { Button, Card, List, message, Select, Tooltip } from \"antd\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { addItemToCart, getMenus, getRestaurants } from \"../utils\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst AddToCartButton = ({ itemId }) => {\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const AddToCart = () => {\r\n        setLoading(true);\r\n        addItemToCart(itemId)\r\n            .then(() => {\r\n                message.success(`Successfully add item`);\r\n                setLoading(false);\r\n            })\r\n            .catch((err) => message.error(err.message))\r\n            .finally(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <Tooltip title=\"Add to shopping cart\">\r\n            <Button\r\n                loading={loading}\r\n                type=\"primary\"\r\n                icon={<PlusOutlined />}\r\n                onClick={AddToCart}\r\n            />\r\n        </Tooltip>\r\n    );\r\n};\r\n\r\nconst FoodList = () => {\r\n    const [foodData, setFoodData] = useState([]);\r\n    const [curRest, setCurRest] = useState();\r\n    const [restaurants, setRestaurants] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [loadingRest, setLoadingRest] = useState(false);\r\n\r\n    // componentDidMount + componentDidUpdate\r\n    // if second parameter is set to [], then componentDidMount only\r\n    useEffect(() => {\r\n        // step1: set loading status to true\r\n        setLoadingRest(true);\r\n        // step2: fetch restaurants data from server\r\n        // step2.1:\r\n        getRestaurants()\r\n            // case1: success\r\n            .then((data) => {\r\n                setRestaurants(data);\r\n            })\r\n            // case2: failed\r\n            .catch((err) => {\r\n                message.error(err.message);\r\n            })\r\n            // finally, set loading status to false\r\n            .finally(() => {\r\n                setLoadingRest(false);\r\n            });\r\n    }, []);\r\n\r\n    // componentDidUpdate -> update selected restaurant\r\n    useEffect(() => {\r\n        if (curRest) {\r\n            // step1: set loading status to true\r\n            setLoading(true);\r\n            // step2: fetch menu data from server\r\n            // step2.1:\r\n            getMenus(curRest)\r\n                // case1: success\r\n                .then((data) => {\r\n                    setFoodData(data);\r\n                })\r\n                // case2: failed\r\n                .catch((err) => {\r\n                    message.error(err.message);\r\n                })\r\n                // finally, set loading status to false\r\n                .finally(() => {\r\n                    setLoading(false);\r\n                });\r\n        }\r\n    }, [curRest]);\r\n\r\n    return (\r\n        <>\r\n            <Select\r\n                value={curRest}\r\n                onSelect={(value) => setCurRest(value)}\r\n                placeholder=\"Select a restaurant\"\r\n                loading={loadingRest}\r\n                style={{ width: 300 }}\r\n                onChange={() => {}}\r\n            >\r\n                {restaurants.map((item) => {\r\n                    return <Option key={item.id} value={item.id}>{item.name}</Option>;\r\n                })}\r\n            </Select>\r\n            {curRest && (\r\n                <List\r\n                    style={{ marginTop: 20 }}\r\n                    loading={loading}\r\n                    grid={{\r\n                        gutter: 16,\r\n                        xs: 1,\r\n                        sm: 2,\r\n                        md: 4,\r\n                        lg: 4,\r\n                        xl: 3,\r\n                        xxl: 3,\r\n                    }}\r\n                    dataSource={foodData}\r\n                    renderItem={(item) => (\r\n                        <List.Item>\r\n                            <Card\r\n                                title={item.name}\r\n                                extra={<AddToCartButton itemId={item.id} />}\r\n                            >\r\n                                <img\r\n                                    src={item.imageUrl}\r\n                                    alt={item.name}\r\n                                    style={{ height: \"auto\", width: \"100%\", display: \"block\" }}\r\n                                />\r\n                                {`Price: $${item.price}`}\r\n                            </Card>\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FoodList;","import {Avatar, Button, Drawer, List, message, Modal, Space, Tooltip, Typography} from \"antd\";\r\nimport {DeleteOutlined, LogoutOutlined, PlusOutlined, ShoppingCartOutlined} from \"@ant-design/icons\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {addItemToCart, checkout, getCart} from \"../utils\";\r\n\r\nconst {Text} = Typography;\r\n\r\nconst MyCart = (props) => {\r\n    const [cartVisible, setCartVisible] = useState(false);\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [cartData, setCartData] = useState({});\r\n    const [loading, setLoading] = useState(false);\r\n    const [checking, setChecking] = useState(false);\r\n\r\n    // get cart\r\n    useEffect(() => {\r\n        // case1: cart is not visible -> return\r\n        if (!cartVisible) {\r\n            return;\r\n        }\r\n        // case2: cart is visible\r\n        // step1: set loading status -> true\r\n        setLoading(true);\r\n        // step2: fetch cart data\r\n        getCart()\r\n            // case1: success -> setCartData\r\n            .then((data) => {\r\n                setCartData(data);\r\n            })\r\n            // case2: fail -> inform user\r\n            .catch((err) => {\r\n                message.error(err.message);\r\n            })\r\n            // finally, set loading status -> false\r\n            .finally(() => {\r\n                setLoading(false);\r\n            });\r\n    }, [cartVisible]);\r\n\r\n    // check out\r\n    const onCheckOut = () => {\r\n        setChecking(true);\r\n        checkout()\r\n            .then(() => {\r\n                message.success(\"Successfully checkout\");\r\n                setCartVisible(false);\r\n            })\r\n            .catch((err) => {\r\n                message.error(err.message);\r\n            })\r\n            .finally(() => {\r\n                setChecking(false);\r\n            });\r\n    };\r\n\r\n    // delete item from cart\r\n    const DeleteFromCart = (itemId) => {\r\n        console.log(itemId)\r\n        // setLoading(true);\r\n        // addItemToCart(itemId)\r\n        //     .then(() => {\r\n        //         message.success(`Successfully delete item`);\r\n        //     })\r\n        //     .catch((err) => message.error(err.message))\r\n        //     .finally(() => {\r\n        //         setLoading(false);\r\n        //     });\r\n    };\r\n\r\n    const showModal = () => {\r\n        setIsModalVisible(true);\r\n    };\r\n\r\n    const handleOk = () => {\r\n        setIsModalVisible(false);\r\n        props.onLogout();\r\n        message.success(`Logout Successfully`);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const onCloseDrawer = () => {\r\n        setCartVisible(false);\r\n    };\r\n\r\n    const onOpenDrawer = () => {\r\n        setCartVisible(true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Space size=\"large\">\r\n                <Button type=\"primary\" shape=\"round\" icon={<ShoppingCartOutlined/>} onClick={onOpenDrawer}>\r\n                    Cart\r\n                </Button>\r\n                <Button shape=\"round\" icon={<LogoutOutlined/>} onClick={showModal}>\r\n                    log out\r\n                </Button>\r\n            </Space>\r\n            <Modal visible={isModalVisible} okText=\"Yes\" onOk={handleOk} onCancel={handleCancel}>\r\n                <p>Do you want to log out?</p>\r\n            </Modal>\r\n            <Drawer\r\n                title=\"My Shopping Cart\"\r\n                onClose={onCloseDrawer}\r\n                visible={cartVisible}\r\n                width={400}\r\n                footer={\r\n                    <div\r\n                        style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                        }}\r\n                    >\r\n                        <Text strong={true}>{`Total price: $${cartData.totalPrice ? cartData.totalPrice : 0}`}</Text>\r\n                        <div>\r\n                            <Button onClick={onCloseDrawer} style={{marginRight: 8}}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button\r\n                                onClick={onCheckOut}\r\n                                type=\"primary\"\r\n                                loading={checking}\r\n                                disabled={loading || (cartData.orderItemList && cartData.orderItemList.length === 0)}\r\n                            >\r\n                                Checkout\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            >\r\n                <List\r\n                    loading={loading}\r\n                    itemLayout=\"horizontal\"\r\n                    dataSource={cartData?.orderItemList}\r\n                    renderItem={(item) => (\r\n                        <List.Item actions={[\r\n                            <Tooltip title=\"Delete from shopping cart\">\r\n                                <Button\r\n                                    icon={<DeleteOutlined />}\r\n                                    // onClick={DeleteFromCart}\r\n                                />\r\n                            </Tooltip>\r\n                        ]}>\r\n                            <List.Item.Meta\r\n                                avatar={\r\n                                    <Avatar src={item.menuItem.imageUrl}/>\r\n                                }\r\n                                title={item.menuItem.name}\r\n                                description={`$${item.price}`}\r\n                            />\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            </Drawer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MyCart;","export default __webpack_public_path__ + \"static/media/background.2702a915.jpg\";","import React, {useState} from \"react\";\nimport {Layout, Typography} from \"antd\";\nimport LoginForm from './components/LoginForm'\nimport SignupForm from \"./components/SignupForm\";\nimport FoodList from \"./components/FoodList\";\nimport MyCart from \"./components/MyCart\";\nimport './App.css';\nimport Background from './asset/background.jpg';\n\nconst {Header, Content, Footer} = Layout;\nconst {Title} = Typography;\n\nfunction App() {\n    const [authed, setAuthed] = useState(false);\n\n    return (\n        <Layout style={{height: \"100vh\", backgroundImage: `url(${Background})`}}>\n            <Header>\n                <div className=\"header\">\n                    <Title\n                        level={2}\n                        style={{color: \"white\", lineHeight: \"inherit\", marginBottom: 0}}\n                    >\n                        Online Order\n                    </Title>\n                    <div>{authed ? <MyCart onLogout={() => setAuthed(false)}/> : <SignupForm/>}</div>\n                </div>\n            </Header>\n            <Content style={{\n                padding: '50px',\n                maxHeight: \"calc(100% - 64px)\",\n                overflowY: \"auto\",\n            }\n            }>\n                {authed ? (\n                    <FoodList/>\n                ) : (\n                    <LoginForm onSuccess={() => setAuthed(true)}/>\n                )}\n            </Content>\n            <Footer style={{textAlign: 'center', color: 'white', background: '#001529'}}>\n                Online Order ©2021 Created by Shaoshuai Xu\n            </Footer>\n        </Layout>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}